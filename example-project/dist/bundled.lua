--[[
	Bundled Using LuBu - Simple Lua Bundler
	LuBu: https://github.com/chaposcripts/lubu
]]
-- This function generated by LuBu. Used to load compressed .dll modules
local function LUBU_LOAD_COMPRESSED_DYNAMIC_LIBRARY(moduleName, bytes)
	local tempFileName = moduleName .. ".dll";
	local file = io.open(tempFileName, "wb");
	assert(file, '[LuBu Error] Error loading compressed dynamic library (counld not open file): ' .. tempFileName);
	for _, byte in ipairs(bytes) do
		file:write(string.char(byte));
	end
	file:close();
	local module = require(moduleName);
	os.remove(tempFileName);
	return module;
end

-- Constants
LUBU_BUNDLED = true;
LUBU_BUNDLED_AT = "1737749040";

-- Module "utils" (from C:\Users\dmitry\Desktop\dev\go\lubu\example-project\src\utils.lua)
package.preload['utils'] = (function()
local Utils = {};

function Utils.printTable(t)
    for k, v in pairs(t) do
        print(k, '=', v);
    end
end

return Utils;
end);

-- Module "lfs" (from C:\Users\dmitry\Desktop\dev\go\lubu\example-project\src\lfs.dll)
package.preload['lfs'] = LUBU_LOAD_COMPRESSED_DYNAMIC_LIBRARY('lfs', { --[[ BYTES_HERE ]] });

-- Module "my-math" (from C:\Users\dmitry\Desktop\dev\go\lubu\example-project\src\my-math.lua)
package.preload['my-math'] = (function()
local MyMath = {};

function MyMath.sum(...)
    local result = 0;
    for _, num in ipairs({ ... }) do
        result = result + num;
    end
    return result;
end

return MyMath;
end);

-- Init (from C:\Users\dmitry\Desktop\dev\go\lubu\example-project\src\init.lua) 
LUBU_ENTRY_POINT = (function()
local lfs = require('lfs');
local MyMath = require('my-math');
local Utils = require('utils');

print('Script path:', lfs.currentdir());

local numbers = { 1, 10, 71, 22, 39 };
print('Numbers:');
Utils.printTable(numbers);
print('Sum of this numbers is', MyMath.sum(table.unpack(numbers)));
end);
LUBU_ENTRY_POINT();
